#cloud-config
fqdn: ${fqdn}
hostname: ${hostname}
locale: ${locale}
timezone: ${timezone}

users:
  - name: ${ssh_user}
    groups: sudo
    lock_passwd: true
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh_authorized_keys:
      - ${ssh_pubkey}

package_update: true
package_upgrade: true

packages:
  - sudo
  - curl
  - vim
  - htop
  - tmux

write_files:
  - path: /etc/ssh/sshd_config.d/99-custom-ssh.conf
    content: |
      PermitRootLogin no
      PasswordAuthentication no
      AllowUsers ${ssh_user}

runcmd:
  # Delete all cloud-init SSH config fragments that could override the settings
  - find /etc/ssh/sshd_config.d/ -type f -name '*cloud-init*.conf' -exec rm -f {} \;
  - systemctl restart ssh
  # Install postgresql
  - |
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/trusted.gpg.d/postgresql.gpg] http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list
  - |
    curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg
  - apt-get update
  - apt-get install -y postgresql-17
  - chage -E -1 postgres || true
  - apt-get install -y postgresql-17
  - systemctl enable postgresql
  - systemctl start postgresql
  - |
    echo "Waiting for PostgreSQL to be ready..."
    for i in {1..20}; do
      pg_isready && break
      echo "PostgreSQL not ready yet, retrying in 2s..."
      sleep 2
    done
  - |
    su - postgres -c "psql -tc \"SELECT 1 FROM pg_roles WHERE rolname='${ssh_user}'\"" | grep -q 1 || \
    su - postgres -c "psql -c \"CREATE USER ${ssh_user} SUPERUSER;\""
  - |
    su - postgres -c "psql -c \"ALTER USER ${ssh_user} WITH PASSWORD '${postgres_password}';\""
  - |
    su - postgres -c "psql -lqt | cut -d \| -f 1 | grep -qw k3s || createdb k3s"
  - |
    su - postgres -c "psql -lqt | cut -d \| -f 1 | grep -qw vaultwarden || createdb vaultwarden"
  - |
    sed -i '/127\.0\.0\.1\/32/ s/scram-sha-256/trust/' /etc/postgresql/17/main/pg_hba.conf || \
    echo "host all all 127.0.0.1/32 trust" >> /etc/postgresql/17/main/pg_hba.conf
  - |
    sed -i '/::1\/128/ s/scram-sha-256/trust/' /etc/postgresql/17/main/pg_hba.conf || \
    echo "host all all ::1/128 trust" >> /etc/postgresql/17/main/pg_hba.conf
  - systemctl restart postgresql
  # Install k3s
  - |
    curl -sfL https://get.k3s.io | sh -s - --datastore-endpoint="postgres://${ssh_user}:${postgres_password}@localhost/k3s"
  - chown ${ssh_user}:${ssh_user} /etc/rancher/k3s/k3s.yaml
  - chown ${ssh_user}:${ssh_user} /var/lib/rancher/k3s/server/node-token
  - echo "Cloud-init finished provisioning" > /var/log/cloud-init.done
